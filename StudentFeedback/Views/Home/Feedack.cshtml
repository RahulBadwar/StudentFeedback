@model StudentFeedback.Models.Student
@{
    ViewBag.Title = "Feedack";
}

<h2>Feedack</h2>

@using (Html.BeginForm("FeedackShow", "Home", FormMethod.Post))
            {
                <table>


                    <tr>
                        <th>
                            @Html.DisplayNameFor(s => s.Name)
                        </th>
                        <td>
                            @Html.TextBoxFor(s => s.Name)
                            <span class="text-danger">
                                @Html.ValidationMessageFor(m => m.Name)
                            </span>
                        </td>
                    </tr>
                    

                    <tr>
                        <th>
                            @Html.DisplayNameFor(s => s.gender)
                        </th>
                        <td>
                            Male
                            @Html.RadioButtonFor(model => model.gender, "Male")
                            Female
                            @Html.RadioButtonFor(model => model.gender, "Female")
                            <span class="text-danger">
                                @Html.ValidationMessageFor(m => m.gender)
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(s => s.Ratings)
                        </th>
                        <td>
                            Excellent
                            @Html.RadioButtonFor(model => model.Ratings, "Excellent")
                            Good
                            @Html.RadioButtonFor(model => model.Ratings, "Good")
                            Average
                            @Html.RadioButtonFor(model => model.Ratings, "Average")
                            poor
                            @Html.RadioButtonFor(model => model.Ratings, "poor")
                            <span class="text-danger">
                                @Html.ValidationMessageFor(m => m.Ratings)
                            </span>
                        </td>
                    </tr>

                    <tr>
                        <th>
                            @Html.DisplayNameFor(s => s.courses)
                        </th>
                        <td>
                            @Html.DropDownListFor(s=>s.courses,new SelectList(Enum.GetValues(typeof(StudentFeedback.Models.Courses))),"select Cources") 
                            <span class="text-danger">
                                @Html.ValidationMessageFor(m => m.courses)
                            </span></td>
                    </tr>

                    <tr>
                        <th>
                            @Html.DisplayNameFor(s => s.sugesstion)
                        </th>
                        <td>
                            @Html.TextAreaFor(s => s.sugesstion)
                            <span class="text-danger">
                                @Html.ValidationMessageFor(m => m.courses)
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(s => s.Demome)
                        </th>
                        <td>
                            @{var numList = Enum.GetValues(typeof(StudentFeedback.Models.Demo));}
                            @foreach (object radiotext in numList)
                            {
                                @Html.RadioButton("radioname", radiotext.ToString())@radiotext.ToString()
                            }
                            <span class="text-danger">
                                @Html.ValidationMessageFor(m => m.Demome)
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <th>
                            <input type="submit" value="submit" />
                        </th>
                    </tr>

                </table>
            }

